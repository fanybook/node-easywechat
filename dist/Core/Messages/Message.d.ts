export declare class Message {
    static TEXT: number;
    static IMAGE: number;
    static VOICE: number;
    static VIDEO: number;
    static SHORT_VIDEO: number;
    static LOCATION: number;
    static LINK: number;
    static DEVICE_EVENT: number;
    static DEVICE_TEXT: number;
    static FILE: number;
    static TEXT_CARD: number;
    static TRANSFER: number;
    static EVENT: number;
    static MINIPROGRAM_PAGE: number;
    static ALL: number;
    protected type: string;
    protected id: number;
    protected to: string;
    protected from: string;
    protected properties: Array<string>;
    protected jsonAliases: object;
    constructor(attributes?: object);
    getType(): string;
    setType(type: string): void;
    transformToXml(appends?: object, returnAsObject?: boolean): any;
    toXmlArray(): void;
    transformForJsonRequestWithoutType(appends?: object): object;
    transformForJsonRequest(appends?: object, withType?: boolean): object;
    propertiesToObject(data: object, aliases?: object): object;
    protected attributes: object;
    protected required: Array<string>;
    setAttributes(attributes: object): this;
    setAttribute(name: string, value: string): this;
    set(name: string, value: string): this;
    getAttribute(name: string, defaultValue?: any): any;
    get(name: string, defaultValue?: any): any;
    has(name: string): boolean;
    merge(attributes: object): this;
    only(keys: Array<string>): object;
    all(): object;
    getRequired(): Array<string>;
    isRequired(attribute: any): boolean;
    protected checkRequiredAttributes(): void;
}
